version: '3.9'

services:
  # Existing Qdrant setup
  qdrant:
    image: qdrant/qdrant:v1.15.0
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - character_net

  # Existing backend (keep as is)
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      - qdrant
    restart: unless-stopped
    networks:
      - character_net

  # Existing frontend (keep as is)
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - character_net

  # NEW: Timeline database (separate container)
  timeline_db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: timeline_db
      POSTGRES_USER: timeline_user
      POSTGRES_PASSWORD: ${TIMELINE_DB_PASSWORD:-secure_password}
    volumes:
      - timeline_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    restart: unless-stopped
    networks:
      - character_net

  # NEW: MCP Server (containerized)
  mcp_server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8000:8000"
    environment:
      - TIMELINE_DATABASE_URL=postgresql://timeline_user:${TIMELINE_DB_PASSWORD:-secure_password}@timeline_db:5432/timeline_db
      - QDRANT_URL=http://qdrant:6333
      - AZURE_ENDPOINT=${AZURE_ENDPOINT}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - CHARACTER_DATA_DIR=/app/character_data
    depends_on:
      - timeline_db
      - qdrant
    volumes:
      # Mount host directories for backward compatibility
      - ./character_data:/app/character_data
      - ./model_cache:/app/model_cache
    restart: unless-stopped
    networks:
      - character_net

  # NEW: Discord Bot (can run on host or containerized)
  discord_bot:
    build:
      context: .
      dockerfile: Dockerfile.discord
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - MCP_SERVER_URL=http://mcp_server:8000
    depends_on:
      - mcp_server
    restart: unless-stopped
    networks:
      - character_net
    # Optional: comment out to run on host instead
    profiles:
      - discord-container

volumes:
  timeline_data:

networks:
  character_net:
    driver: bridge